{"ast":null,"code":"var _jsxFileName = \"C:\\\\d_drive\\\\data_analysis\\\\data-preprocessing-dashboard\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreprocessingDashboard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [processedData, setProcessedData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setProcessedData(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"An error occurred while processing the file.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const columns = Object.keys(processedData.processed_data[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Preprocessing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), processedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Data Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"8\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"100%\",\n          textAlign: \"left\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                background: \"#f4f4f4\",\n                padding: \"10px\"\n              },\n              children: col\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: processedData.processed_data.slice(0, 5).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: row[col]\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: processedData.download_link,\n        download: true,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Download Processed CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: processedData.visualization_link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"View Histogram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(PreprocessingDashboard, \"+19fMcVgq59JCJG5JibZYKxYn6M=\");\n_c = PreprocessingDashboard;\nexport default PreprocessingDashboard;\nvar _c;\n$RefreshReg$(_c, \"PreprocessingDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PreprocessingDashboard","_s","file","setFile","processedData","setProcessedData","loading","setLoading","error","setError","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","data","err","_err$response","_err$response$data","columns","Object","keys","processed_data","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","color","border","cellPadding","cellSpacing","width","textAlign","borderCollapse","map","col","index","background","slice","row","rowIndex","colIndex","href","download_link","download","visualization_link","rel","_c","$RefreshReg$"],"sources":["C:/d_drive/data_analysis/data-preprocessing-dashboard/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PreprocessingDashboard = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [processedData, setProcessedData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            setError(\"Please select a file first.\");\r\n            return;\r\n        }\r\n        \r\n        setLoading(true);\r\n        setError(null);\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            });\r\n            \r\n            setProcessedData(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || \"An error occurred while processing the file.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const columns = Object.keys(processedData.processed_data[0]);\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\" }}>\r\n            <h2>Data Preprocessing Dashboard</h2>\r\n            <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload} disabled={loading}>\r\n                {loading ? \"Processing...\" : \"Upload and Process\"}\r\n            </button>\r\n            \r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            \r\n            {processedData && (\r\n                <div>\r\n                    <h3>Processed Data Preview</h3>\r\n                    {/* <pre>{JSON.stringify(processedData.processed_data.slice(0, 5), null, 2)}</pre> */}\r\n                    \r\n                    <table border=\"1\" cellPadding=\"8\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\", borderCollapse: \"collapse\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                            {columns.map((col, index) => (\r\n                                <th key={index} style={{ background: \"#f4f4f4\", padding: \"10px\" }}>{col}</th>\r\n                            ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {processedData.processed_data.slice(0, 5).map((row, rowIndex) => (\r\n                            <tr key={rowIndex}>\r\n                                {columns.map((col, colIndex) => (\r\n                                <td key={colIndex} style={{ padding: \"10px\" }}>{row[col]}</td>\r\n                                ))}\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                        </table>\r\n                    <a href={processedData.download_link} download>\r\n                        <button>Download Processed CSV</button>\r\n                    </a>\r\n                    <a href={processedData.visualization_link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <button>View Histogram</button>\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreprocessingDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}